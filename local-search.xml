<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo搭建个人博客流程</title>
    <link href="/2024/06/10/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B/"/>
    <url>/2024/06/10/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>本文介绍如何使用GitHub Pages + Hexo 搭建个人博客网站。</p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2><p>Git 是一个分布式版本控制软件，目前已经成为最流行的版本管理工具。我们将会经常利用到它的分支合并与分支追踪的功能。</p><h3 id="windows环境安装"><a href="#windows环境安装" class="headerlink" title="windows环境安装"></a>windows环境安装</h3><p>打开<a href="https://git-scm.com/downloads">官网</a>，点击红色方框中的按钮，下载git安装包。安装包下载完毕后，打开安装包，一路确定即可。</p><p><img src="https://raw.githubusercontent.com/onep1us/blog_pics/main/git%E5%AE%89%E8%A3%85.png" alt="git安装"></p><h3 id="Linux环境安装"><a href="#Linux环境安装" class="headerlink" title="Linux环境安装"></a>Linux环境安装</h3><p>在Linux环境下使用如下指令安装 Git</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> git<br></code></pre></td></tr></table></figure><p>安装成功后使用如下指令验证是否安装成功，若安装成功，则控制台会显示git版本号</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><h2 id="安装NodeJs"><a href="#安装NodeJs" class="headerlink" title="安装NodeJs"></a>安装NodeJs</h2><p>打开<a href="https://nodejs.org/zh-cn/download">官网</a>，选择机器对应的操作系统，下载安装包，下载完成后，打开安装包，一路确定即可。<br><img src="https://raw.githubusercontent.com/onep1us/blog_pics/main/20240610221624.png" alt="NodeJs安装"><br>安装成功后使用如下指令验证是否安装成功，若安装成功，则控制台会显示NodeJs版本号</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br></code></pre></td></tr></table></figure><h1 id="GitHub仓库创建"><a href="#GitHub仓库创建" class="headerlink" title="GitHub仓库创建"></a>GitHub仓库创建</h1><p>本博客采用了GitHub Pages的方式将静态页面进行部署，因为GitHub Pages部署比较简单，可以提供免费的域名，还具有比较高的安全性，所以本博客采用GitHub Pages的方式进行部署。GitHub Pages官方文档链接为<a href="https://docs.github.com/zh/pages/getting-started-with-github-pages/about-github-pages">GitHub Pages</a>。</p><p>由于采用了GitHub Pages的方式对博客进行部署，所以在部署前需要创建对应的GitHub仓库，创建GitHub仓库的流程如下所示：</p><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>首先登录GitHub，点击新建仓库的按钮创建仓库<br><img src="https://raw.githubusercontent.com/onep1us/blog_pics/main/20240610223408.png" alt="创建仓库"><br>在创建仓库时，需要先填写仓库名称，此处的仓库名称规则为：<strong>&lt;username&gt;.github.io</strong>，本仓库的名称为onep1us.github.io<br><img src="https://raw.githubusercontent.com/onep1us/blog_pics/main/20240610223527.png"><br>仓库创建完毕后，需要将仓库指定为本账号GitHub Pages对应的仓库，流程如图所示，首先打开仓库，点击Settings按钮，选择Page选项，将本仓库设置为账号对应的GitHub Pages，并且选择仓库的分支，将仓库的分支设置为部署页面时被使用的分支。<br><img src="https://raw.githubusercontent.com/onep1us/blog_pics/main/20240610224003.png" alt="配置GitHub Pages"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
